{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovie","useState","query","setQuery","isLoading","setIsLoading","foundMovie","setFoundMovie","errorTitle","setErrorTitle","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","onClick","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","newMovie","Title","Plot","Poster","imdbID","finally","disabled","trim","find","mov","prev","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73dc426f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  setMovie: React.Dispatch<React.SetStateAction<Movie[]>>;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props>\n= ({ setMovie, movies }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [errorTitle, setErrorTitle] = useState(false);\n\n  const defaultPoster\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorTitle(false);\n  };\n\n  const handleClickFindMovie\n  = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    if (query) {\n      getMovie(query)\n        .then(res => {\n          if ('Error' in res) {\n            setFoundMovie(null);\n            setErrorTitle(true);\n          } else {\n            const newMovie = {\n              title: res.Title,\n              description: res.Plot,\n              imgUrl: res.Poster || defaultPoster,\n              imdbId: res.imdbID,\n              imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n            };\n\n            setFoundMovie(newMovie);\n            setErrorTitle(false);\n          }\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const handleClickAddMovie = (movie: Movie) => {\n    if (!movies.find(mov => mov.imdbId === movie.imdbId)) {\n      setMovie(prev => [...prev, movie]);\n    }\n\n    setQuery('');\n    setFoundMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChangeTitle}\n            />\n          </div>\n\n          {errorTitle && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              onClick={handleClickFindMovie}\n              disabled={!query.trim()}\n            >\n              {foundMovie && query && !errorTitle ? (\n                <p>Search again</p>\n              ) : (\n                <p>Find a movie</p>\n              )}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {foundMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleClickAddMovie(foundMovie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5bd1467c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport 'bulma';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovie={setMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}